plugins {
    id 'java'
    id 'groovy'
    id 'jacoco-report-aggregation'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'it.fulminazzo'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'fulminazzo'
        url = 'https://repo.fulminazzo.it/releases'
    }
    maven {
        name = 'minecraft-repo'
        url = 'https://libraries.minecraft.net/'
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    compileOnly 'org.jetbrains:annotations:26.0.2'

    compileOnly 'org.spigotmc:spigot-api:1.13.2-R0.1-SNAPSHOT'
    compileOnly 'com.mojang:authlib:1.5.21'

    implementation 'it.fulminazzo:FulmiCommands:1.0.0'
    implementation 'it.fulminazzo:yagl:4.3'

    testCompileOnly 'org.projectlombok:lombok:1.18.36'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
    testCompileOnly 'org.jetbrains:annotations:26.0.2'

    testImplementation 'org.spockframework:spock-core:2.4-M4-groovy-4.0'
    testRuntimeOnly 'net.bytebuddy:byte-buddy:1.17.5'
    testImplementation 'org.mockito:mockito-core:4.11.0'

    testImplementation 'com.google.code.gson:gson:2.13.1'
    testImplementation 'com.h2database:h2:2.2.224'

    testImplementation 'org.spigotmc:spigot-api:1.13.2-R0.1-SNAPSHOT'
    testImplementation 'com.mojang:authlib:1.5.21'

    testImplementation 'it.fulminazzo.jbukkit:base:3.4'
    testImplementation 'it.fulminazzo.jbukkit:13:3.4'
}

test {
    useJUnitPlatform()
}

shadowJar {
    exclude 'META-INF/**'
    exclude 'FileConfigurationStaticMethods.class'

    dependencies {
        exclude dependency('org.yaml:snakeyaml')
    }

    relocate('it.fulminazzo.yamlparser', "it.fulminazzo.${project.name}.yamlparser")
    relocate('it.fulminazzo.tagparser', "it.fulminazzo.${project.name}.tagparser")
    relocate('it.fulminazzo.fulmicollection', "it.fulminazzo.${project.name}.fulmicollection")
    relocate('it.fulminazzo.fulmicommands', "it.fulminazzo.${project.name}.fulmicommands")
    relocate('it.fulminazzo.yagl', "it.fulminazzo.${project.name}.yagl")
    relocate('com.google.gson', "it.fulminazzo.${project.name}.gson")
    relocate('com.moandjiezana.toml', "it.fulminazzo.${project.name}.toml")
    archiveFileName = "$project.name-${project.version}.jar"
}

jar {
    enabled = false // Required for sub projects depending on sub projects
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    archiveFileName = "$project.name-$project.version-original.jar"
    dependsOn(shadowJar)
    manifest {
        attributes ('Manifest-Version': "$rootProject.version")
    }
}

testCodeCoverageReport {
    dependsOn test
    reports {
        xml.required = true
        csv.required = true
    }
}

processResources {
    def props = [
            'version': version, 'group': rootProject.group,
            'name': 'UserStalker', 'name_lower': rootProject.name
    ]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
